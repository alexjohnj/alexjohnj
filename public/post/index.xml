<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Posts on Alex J </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://localhost:1313/post/index.xml</link>
    
    
    
    <updated>Sat, 19 Apr 2014 00:00:00 UTC</updated>
    
    <item>
      <title>Restoring the Network Manager Applet After Upgrading to Lubuntu 14.04</title>
      <link>http://localhost:1313/post/2014/04/2014-04-19-restoring-the-network-manager-applet-after-upgrading-lubuntu</link>
      <pubDate>Sat, 19 Apr 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/post/2014/04/2014-04-19-restoring-the-network-manager-applet-after-upgrading-lubuntu</guid>
      <description>&lt;p&gt;It seems there&amp;rsquo;s a bug when upgrading Lubuntu to version 14.04 that causes the network manager applet to disappear from the system tray. I&amp;rsquo;ve experienced the problem on two separate installations so I&amp;rsquo;m going to guess this is a widespread problem.&lt;/p&gt;

&lt;p&gt;The fix is easy. Just open a terminal session and run this command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;nm-applet&amp;quot; &amp;gt;&amp;gt; ~/.config/lxsession/Lubuntu/autostart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;All the command does is add &lt;code&gt;nm-applet&lt;/code&gt; to your LXDE autostart file. If you logout and log back in, the network manager applet should be running.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Some .sexy New TLDs</title>
      <link>http://localhost:1313/post/2014/03/2014-03-12-some-sexy-new-tlds</link>
      <pubDate>Wed, 12 Mar 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/post/2014/03/2014-03-12-some-sexy-new-tlds</guid>
      <description>&lt;p&gt;Today I became the proud owner of &lt;a href=&#34;http://alexj.sexy&#34;&gt;alexj.sexy&lt;/a&gt; following in the footsteps of people like Myke Hurley of &lt;a href=&#34;http://myke.sexy&#34;&gt;myke.sexy&lt;/a&gt;. This is possibly the best $25 I&amp;rsquo;ve ever spent.&lt;/p&gt;

&lt;p&gt;Joking aside, I couldn&amp;rsquo;t help but notice how stupid some of the new TLDs are. A sliver do allow for some creative and memorable domains but for the most part they&amp;rsquo;re pretty useless. Take, for example, the &lt;code&gt;.guru&lt;/code&gt; TLD. How many times in the past year have you referred to someone as a guru? I&amp;rsquo;d guess it&amp;rsquo;s a pretty small number.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m probably getting cranky over nothing here. Nowadays people don&amp;rsquo;t access a website via its domain name anyway so the new TLDs will likely be of little importance. Still, I find it funny to think that a board of people at ICANN looked at TLDs like &lt;code&gt;.sexy&lt;/code&gt; or &lt;code&gt;.cool&lt;/code&gt; and thought they were good.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Nginx</title>
      <link>http://localhost:1313/post/2014/02/2014-02-03-nginx-surprisingly-easy</link>
      <pubDate>Mon, 03 Feb 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/post/2014/02/2014-02-03-nginx-surprisingly-easy</guid>
      <description>

&lt;p&gt;Out of curiosity I spent my Sunday afternoon moving this blog from Amazon S3 to a &lt;a href=&#34;https://www.digitalocean.com/?refcode=755d29c48c8c&#34;&gt;DigitalOcean&lt;/a&gt; VPS (spoiler, that&amp;rsquo;s a referral link). I didn&amp;rsquo;t have a solid reason to do this&amp;mdash;it&amp;rsquo;s both more expensive and more effort&amp;mdash;aside from to learn. I&amp;rsquo;ve never set up a web server from scratch before let alone owned a VPS. I kind of felt I needed one so I could earn some geek cred.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m running Ubuntu 12.04 LTS on the VPS since Ubuntu&amp;rsquo;s the Linux distribution I have the most experience with[^1]. Nginx is acting as the web server and seems to be fast. It&amp;rsquo;s not like I have anything to compare it with though. The VPS is DigitalOcean&amp;rsquo;s cheapest droplet&amp;mdash;512 MB of RAM and a 20 GB SSD.&lt;/p&gt;

&lt;p&gt;Given my lack of experience with web servers, I was expecting Nginx to be a pain to set up. Surprisingly, it wasn&amp;rsquo;t. Within 30 minutes I had a test page up and within an hour I was serving a mirror of this site from a subdomain of this site. Granted, this is a purely static site, so I didn&amp;rsquo;t have to set up the full LEMP stack.&lt;/p&gt;

&lt;p&gt;I won&amp;rsquo;t go into detail about how I set up the VPS but I&amp;rsquo;ll share a few resources I found. DigitalOcean&amp;rsquo;s support website has some &lt;a href=&#34;https://www.digitalocean.com/community&#34;&gt;good documentation&lt;/a&gt; on setting up a Linux VPS. There&amp;rsquo;s also a tutorial on &lt;a href=&#34;https://www.digitalocean.com/community/articles/how-to-install-linux-nginx-mysql-php-lemp-stack-on-ubuntu-12-04&#34;&gt;setting up a LEMP stack&lt;/a&gt; but I&amp;rsquo;m not a fan of it. The tutorial uses the outdated nginx package provided in the Ubuntu repositories. It needs updating with info on getting the latest version of Nginx.&lt;/p&gt;

&lt;p&gt;A very useful resource I found for learning about Nginx was &lt;a href=&#34;http://blog.martinfjordvald.com&#34;&gt;Martin Fjordvald&amp;rsquo;s blog&lt;/a&gt;. He&amp;rsquo;s written several useful and interesting articles especially &lt;a href=&#34;http://blog.martinfjordvald.com/2010/07/nginx-primer/&#34;&gt;&amp;ldquo;Nginx Configuration Primer&amp;rdquo;&lt;/a&gt;. He&amp;rsquo;s also &lt;a href=&#34;http://blog.martinfjordvald.com/2013/05/my-new-nginx-book-instant-nginx-starter/&#34;&gt;written a short book&lt;/a&gt; that goes into a bit more detail. It&amp;rsquo;s a quick read and definitely worth the ~Â£6.00 if you&amp;rsquo;re new to Nginx.&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;Advantages&lt;/h2&gt;

&lt;p&gt;More than anything this was a learning exercise but there were a few benefits.&lt;/p&gt;

&lt;p&gt;The biggest advantage is native support for root domain names. AWS doesn&amp;rsquo;t support them unless you use their &lt;a href=&#34;http://aws.amazon.com/route53/&#34;&gt;Route 53&lt;/a&gt; service. As a result, I had to use a 3^rd party service to redirect the root domain to the www &lt;code&gt;cname&lt;/code&gt; record. This added an extra 200&amp;ndash;300 ms to the DNS look up if somebody used the naked domain. It was a noticeable difference in performance. Now, the homepage loads in ~300 ms regardless of which domain you use.&lt;/p&gt;

&lt;p&gt;Another advantage is the extra control I get. With S3, supporting features like gzip compression was an all or nothing choice. If a browser didn&amp;rsquo;t support gzip&amp;mdash;an admittedly rare occurrence&amp;mdash;it&amp;rsquo;d receive nothing but garbled data. With Nginx though I can enable the &lt;code&gt;gzip_static&lt;/code&gt; directive and support these browsers.&lt;/p&gt;

&lt;p&gt;Going forwards I&amp;rsquo;m probably going to serve &lt;a href=&#34;http://geographyas.info&#34;&gt;Geography AS Notes&lt;/a&gt; from the same DigitalOcean droplet since GitHub pages offers even less control than Amazon S3. I don&amp;rsquo;t see any reason why I can&amp;rsquo;t serve it from the same droplet since this website is such a low volume site, it will have a negligible performance impact. If need be I can get a better DigitalOcean droplet but since Geography AS Notes is strictly not for profit and advertisement free I&amp;rsquo;d have to find some way to subsidise the cost.&lt;/p&gt;

&lt;p&gt;[^1]: I&amp;rsquo;ve been running and maintaining Ubuntu on my Grandmother&amp;rsquo;s computer since 8.04. She uses my old MacBook now but had no problems with Ubuntu when she used it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Redesigning Geography AS Notes</title>
      <link>http://localhost:1313/post/2014/01/2014-01-08-redesigning-geography-as-notes</link>
      <pubDate>Wed, 08 Jan 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/post/2014/01/2014-01-08-redesigning-geography-as-notes</guid>
      <description>&lt;p&gt;Just under a month ago, I [wrote about][project-changes] which projects I&amp;rsquo;d be focusing my time on in the coming year. The main takeaway from the post was that [Geography AS Notes][gas-project-page] was going to get some love. Well, here&amp;rsquo;s my first packet of love[^1], a redesign.&lt;/p&gt;

&lt;p&gt;[project-changes]: {{ site.baseurl }}/12/project-updates/&lt;/p&gt;

&lt;p&gt;[gas-project-page]: {{ site.baseurl }}/projects/geographyas/&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s been nearly two years since I last refreshed &lt;em&gt;Geography AS Notes&amp;rsquo;&lt;/em&gt; design and in that time its grown boring and stale. The website&amp;rsquo;s design has never been eye catching&amp;mdash;one frequent piece of feedback I get is that the site is boring to look at&amp;mdash; but for the past two years I&amp;rsquo;ve taken the function over form approach. This needed to change.&lt;/p&gt;

&lt;p&gt;If a site is boring to look at, the reader is more likely to perceive the content as boring which isn&amp;rsquo;t good if you want them to study using it. Furthermore, I&amp;rsquo;ve realised that Helvetica (or Arial on Windows) ins&amp;rsquo;t a good body font and my choice of font was hurting the legibility of the site, a problem that grew worse with the length of articles.&lt;/p&gt;

&lt;p&gt;For the redesign, I wanted to make something that not only looked half decent but was comfortable to read on a multitude of devices. In addition, I wanted to simplify the site&amp;rsquo;s markup and make use of the new HTML5 semantic elements to improve accessibility, something which is very important when you&amp;rsquo;re dealing with people&amp;rsquo;s education. Finally, I wanted to make it easier for people to find content on the site by implementing site search. These were the four main objectives when redesigning the website.&lt;/p&gt;

&lt;p&gt;The first objective I worked on was improving the HTML semantics. This didn&amp;rsquo;t take too long and drastically simplified the site&amp;rsquo;s markup. I found a fantastic &lt;a href=&#34;http://mystrd.at/modern-clean-css-sticky-footer/&#34;&gt;new method&lt;/a&gt; for writing CSS sticky footers. By using it I was able to eliminate lots of un-semantic wrapper styles and layout my pages with just the &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt; elements. The new CSS sticky footer doesn&amp;rsquo;t work in IE &amp;lt;= 7 but &lt;em&gt;nobody&lt;/em&gt; uses that anymore.&lt;/p&gt;

&lt;p&gt;Speaking of IE, I raised my minimum target from IE 7 to 8[^2]. I was surprised by how painless it was developing for IE 8. All I needed to do was drop in &lt;a href=&#34;https://code.google.com/p/html5shiv/&#34;&gt;html5shiv.js&lt;/a&gt; and there were no further problems. I&amp;rsquo;ve actually had more problems with IE 9/10/11 and their funky way of resizing &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; elements with SVG content (which I still haven&amp;rsquo;t fixed).&lt;/p&gt;

&lt;p&gt;With the site&amp;rsquo;s structure modernised, I started working on how the site looks. I opted for a dark colour scheme with splashes of orange. I think it looks good and it&amp;rsquo;s much better than the old design. Article headers receive more emphasis than they used to while the site&amp;rsquo;s header is less dominant to focus on the content. The new design is more fluid than the old one, relying less on media queries and making extensive use of % dimensions. This kept the SCSS clean.&lt;/p&gt;

&lt;p&gt;I made some significant changes to the homepage. Previously, the homepage used a set of expanding divs that contained the site&amp;rsquo;s content. It looked sort of cool but didn&amp;rsquo;t work well on small screens and content was often truncated since I couldn&amp;rsquo;t use &lt;code&gt;height:auto&lt;/code&gt; on the divs and have CSS3 transitions work. In the new design, a (pseudo) segmented control is used to control the visible topic. This works better on mobiles and doesn&amp;rsquo;t have any problems with truncated content as I&amp;rsquo;m only toggling the div&amp;rsquo;s (well, &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; now) &lt;code&gt;visibility&lt;/code&gt; and &lt;code&gt;display&lt;/code&gt; properties.&lt;/p&gt;

&lt;p&gt;The next objective to strike off was legibility. I played around with a few font combinations from Google Fonts and ended up combining &lt;a href=&#34;https://www.google.com/fonts/specimen/Arvo&#34;&gt;Arvo&lt;/a&gt; and &lt;a href=&#34;http://www.google.com/fonts/specimen/Raleway&#34;&gt;Raleway&lt;/a&gt;. Arvo&amp;mdash;a slab-serif font&amp;mdash;is used for the site&amp;rsquo;s body while Raleway&amp;mdash;a sans-serif font&amp;mdash;is used for headers. I like the combination, they look nice together and, most importantly, they&amp;rsquo;re highly readable.&lt;/p&gt;

&lt;p&gt;The final objective was search. Most people arrive at &lt;em&gt;Geography AS Notes&lt;/em&gt; using Google but once they&amp;rsquo;re on the site, there&amp;rsquo;s no further search functionality. Since the site&amp;rsquo;s Jekyll powered, implementing search has a few challenges. Mainly, it needs to be handled client-side. I &lt;a href=&#34;https://github.com/alexjohnj/geographyas/tree/super-experimental-search&#34;&gt;toyed with&lt;/a&gt; writing a search engine back in January last year. It worked&amp;mdash;surprisingly efficiently may I add&amp;mdash;but it needed &lt;em&gt;a lot&lt;/em&gt; of work and I never got around to finishing it.&lt;/p&gt;

&lt;p&gt;I tried again to implement client-side site search, this time using &lt;a href=&#34;http://lunrjs.com&#34;&gt;lunr.js&lt;/a&gt; so I didn&amp;rsquo;t have to handle the actual searching. Lunr.js is simple to set up but, in my limited testing, it proved too slow at indexing full text content for every page. It was unreasonable of me to expect it to handle such a large index but it was worth a shot.&lt;/p&gt;

&lt;p&gt;Ultimately, I offloaded site search to a third party service. I tried &lt;a href=&#34;http://tapirgo.com&#34;&gt;Tapir&lt;/a&gt; but the service seems to have shut down[^3]. I ended up using DuckDuckGo which offers some limited customisation of the search results. It&amp;rsquo;s a compromise though&amp;mdash;I&amp;rsquo;d much rather have results on my website.&lt;/p&gt;

&lt;p&gt;The final design ended up looking like this:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;shadow&#34; src=&#34;{{ site.baseurl }}/post-images/2014/01/geography-as-new.png&#34; alt=&#34;Screenshot of the new design&#34; width=&#34;100%&#34;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;shadow&#34; src=&#34;{{ site.baseurl }}/post-images/2014/01/geography-as-new-article.png&#34; alt=&#34;Screenshot of an article with the new design.&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;For reference, the old design:&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;shadow&#34; src=&#34;{{ site.baseurl }}/post-images/2014/01/geography-as-old.png&#34; alt=&#34;Screenshot of the old design&#34; width=&#34;100%&#34;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;shadow&#34; src=&#34;{{ site.baseurl }}/post-images/2014/01/geography-as-old-article.png&#34; alt=&#34;Screenshot of an article with the old design.&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I made a few smaller changes while working on the redesign. All the topics now have their own page which can be linked to. In addition, I&amp;rsquo;ve made it more obvious that people can edit existing articles and create new ones. All articles have an edit link in their footer and I&amp;rsquo;ve &lt;a href=&#34;http://geographyas.info/pages/contributing/&#34;&gt;written about&lt;/a&gt; other ways people can contribute.&lt;/p&gt;

&lt;p&gt;This redesign is just the first in what I hope is a string of updates to &lt;em&gt;Geography AS Notes&lt;/em&gt; that will be coming throughout the year. If you have any suggestions for the website, let me know via the &lt;a href=&#34;https://github.com/alexjohnj/geographyas/&#34;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;[^1]: It&amp;rsquo;s quantum love, coming in discrete packets.&lt;/p&gt;

&lt;p&gt;[^2]: I&amp;rsquo;d like to raise it higher than this but a lot of schools&amp;mdash;where the website&amp;rsquo;s most commonly accessed from&amp;mdash;still use IE 8.&lt;/p&gt;

&lt;p&gt;[^3]: I never received an email with my private API key and received no response from the API with the public key when I tried to use it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Project Updates</title>
      <link>http://localhost:1313/post/2013/12/2013-12-11-project-updates</link>
      <pubDate>Wed, 11 Dec 2013 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/post/2013/12/2013-12-11-project-updates</guid>
      <description>

&lt;p&gt;This is a boring updated on the status of several of my projects. If you don&amp;rsquo;t care about them then just give this post a miss. There&amp;rsquo;ll be a new post in a couple of months which may be more interesting.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;My situation&amp;rsquo;s changed a lot in the past couple of months. I&amp;rsquo;m now at university, living away from my parents, studying what I want to study with some great people. It&amp;rsquo;s pretty awesome. It&amp;rsquo;s also a lot of work which is why I&amp;rsquo;m changing what projects I&amp;rsquo;m focusing on in my spare time.&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;SimpleCode&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;SimpleCode is dead&lt;/strong&gt;. The website&amp;rsquo;s been inactive for some time now[^1] and, on December 4&lt;sup&gt;th&lt;/sup&gt; 2013, I let the domain name expire. I&amp;rsquo;ve been waiting to kill this project and I&amp;rsquo;m glad that it&amp;rsquo;s finally gone. Looking back on the programming tutorials I wrote when I was a less experienced programmer I feel sorry for anybody who tried to learn from them. There&amp;rsquo;s so much incorrect or poorly explained information, it&amp;rsquo;s horrible. I feel only a small bit of sadness killing this projects as it was the first website that I actively maintained and the first domain name I ever owned.&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;&lt;a href=&#34;/projects/symsteam/&#34;&gt;SymSteam&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;SymSteam is on an indefinite hiatus&lt;/strong&gt;. I love SymSteam. It was the first Mac application I worked on where I actually understood most of what I was doing. I didn&amp;rsquo;t need to refer to Stack Overflow[^2] every other line of code and I was actively trying to follow best practices rather than doing my own thing. It was also my first useful application. SimpleCalc was useless, there are thousands of calculators far more powerful than it but SymSteam, as far as I can tell, is unique.&lt;/p&gt;

&lt;p&gt;Work on beta 3 of SymSteam started in April 2013 and the most recent commit was in the tail end of June. Since then, the project&amp;rsquo;s stalled. Ever since building a dedicated computer for gaming, I&amp;rsquo;ve failed to find the motivation to work on SymSteam and it&amp;rsquo;s for this reason that I&amp;rsquo;m officially putting it on hold. I&amp;rsquo;m not calling the project dead because one day I may find the motivation to start working on it again but for now, it just isn&amp;rsquo;t there.&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;&lt;a href=&#34;/projects/appcastr/&#34;&gt;Appcastr&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;It&amp;rsquo;s dead&lt;/strong&gt;. Appcastr&amp;rsquo;s a funny project. I enjoyed making it despite the constant headaches autolayout gave me but for some reason, I completely lost interest in it. It&amp;rsquo;s annoying because I still have ideas for features to add but I don&amp;rsquo;t want to set aside the time to work on them when there&amp;rsquo;s other things I can be doing.&lt;/p&gt;

&lt;p&gt;The project page for Appcastr has, for almost a year, said that it&amp;rsquo;s not dead and that version 0.2 will be released some day. That&amp;rsquo;s not happening. If you want to try out version 0.2, compile it from the 0.2 branch in the &lt;a href=&#34;https://github.com/alexjohnj/appcastr&#34;&gt;git repository&lt;/a&gt;. Otherwise, you can &lt;a href=&#34;https://github.com/downloads/alexjohnj/appcastr/Appcastr-0.1.1.zip&#34;&gt;download&lt;/a&gt; a &amp;lsquo;stable&amp;rsquo; and usable build of version 0.1.1.&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;&lt;a href=&#34;/projects/geographyas/&#34;&gt;Geography AS Notes&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;It&amp;rsquo;s alive!&lt;/strong&gt;. Work on Geography AS Notes has been all over the place this year. At the start of the year, I rewrote the rivers topic over the space of three months, replacing the old content that was essentially notes with researched prose[^3]. After the rewrite though, I haven&amp;rsquo;t done much but manage the technical side of the website. In the coming months, I&amp;rsquo;m going to start focusing on the website&amp;rsquo;s content again.&lt;/p&gt;

&lt;p&gt;Currently, I&amp;rsquo;m converting diagrams to the SVG format so that they look good at all resolutions. I&amp;rsquo;m also adding more information to several of the diagrams to make them more useful. After this, there will be some significant content updates to the coasts and population change topics. The latter topic is in desperate need of a rewrite so I&amp;rsquo;ll try to prioritise this. After that, I will look into adding some new content. I&amp;rsquo;d like to write something about volcanoes &amp;amp; plate tectonics so I think that&amp;rsquo;ll probably be what&amp;rsquo;s coming next.&lt;/p&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;A Prototype&lt;/h2&gt;

&lt;p&gt;Although my main focus for the coming months is going to be my degree and Geography AS Notes, I recently started prototyping an application that I may or may not develop further. I don&amp;rsquo;t want to reveal too much about it as it&amp;rsquo;s something that I&amp;rsquo;m considering making for profit but let&amp;rsquo;s just say it&amp;rsquo;d be my first proper attempt at iOS &amp;amp; graphics programming[^4] and it&amp;rsquo;d be related to my degree&amp;hellip;&lt;/p&gt;

&lt;p&gt;[^1]: I&amp;rsquo;ve had a 4,000 word draft for a post sitting uncommitted in the git repository for nearly 18 months.&lt;/p&gt;

&lt;p&gt;[^2]: OK, I did ask &lt;a href=&#34;http://stackoverflow.com/questions/11811119/cocoa-application-crashing-when-launched-on-login&#34;&gt;one question&lt;/a&gt; on SO when I couldn&amp;rsquo;t figure out why SymSteam was crashing when started on login but I ended up solving that my self any way.&lt;/p&gt;

&lt;p&gt;[^3]: The feedback on the rewrite&amp;rsquo;s been great by the way. Thanks to everyone who&amp;rsquo;s emailed me with comments and suggestions. It&amp;rsquo;s really nice.&lt;/p&gt;

&lt;p&gt;[^4]: It isn&amp;rsquo;t a game.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Review - Tomb Raider</title>
      <link>http://localhost:1313/post/2013/08/2013-08-10-review-tomb-raider</link>
      <pubDate>Sat, 10 Aug 2013 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/post/2013/08/2013-08-10-review-tomb-raider</guid>
      <description>

&lt;p&gt;The newest entry in the Tomb Raider franchise is a much needed reboot of an ageing series. Published by Square Enix &amp;amp; developed by Crystal Dynamics, the game is a major improvement over past titles in the series with the developers focusing a significant amount of their resources on creating an engaging and enjoyable solo experience.&lt;/p&gt;

&lt;p&gt;The story of the new Tomb Raider is the real meat of the game. It focuses on the early days of Lara Croft as she is thrown between a rock and a hard place and starts to develop her survival skills. Lara, an archaeologist, and her colleagues/friends are investigating the ancient Yamani Kingdom when their ship is shipwrecked on an island that happens to be Yamani. They pretty quickly find out they&amp;rsquo;re not alone and that there are other survivors on the island who aren&amp;rsquo;t very friendly and kidnap them. Lara escapes and begins trying to rescue her friends while doing some archaeology on the side like any good scholar.&lt;/p&gt;

&lt;p&gt;The story is told through a series of cutscenes as well as several of Lara&amp;rsquo;s self narrated diary entries. The cutscenes are interesting to watch and the diary entries are equally interesting to listen to. The voice acting in both is well done with some convincing performances. Overall the story is well told, entertaining and captivating. The development of the characters, more specifically Lara, is very good. By choosing to have parts of the story re-told through Lara&amp;rsquo;s diary entries, it really helps hammer home just how much she is changing as a result of the events and by the end of the game, you&amp;rsquo;ll see a very big difference between the Lara you started with and the Lara you ended with. The other characters don&amp;rsquo;t get as much attention as Lara does but their relationship with Lara is well portrayed and there is a strong sense of emotional attachment between her and some of the characters such as Roth.&lt;/p&gt;

&lt;p&gt;Tomb Raider&amp;rsquo;s gameplay is by no means poor or boring but compared to the fantastic story it feels a little second rate. It relies a little too much on quicktime events &amp;amp; button mashing. After the first two hours of gameplay I&amp;rsquo;d already been through nearly a dozen quicktime or button mashing sequences and there were many places in the game where said sequences felt unnecessary. At the same time, there were some places where the sequences did actually work well.&lt;/p&gt;

&lt;p&gt;There are essentially two components to Tomb Raider&amp;rsquo;s gameplay, platforming and shooting. There is arguably a third in the form of stealth but that really takes a back seat as while there appears to be the option to stealthily take out entire groups of enemies I think that this is just an illusion as when I tried this I often found myself in the midst of a firefight just moments later. Maybe I was just doing it wrong.&lt;/p&gt;

&lt;p&gt;The platforming sections work well. The controls are tight and it&amp;rsquo;s always fairly obvious where you need to go thanks to Lara&amp;rsquo;s âSurvival Instinctsâ. The threat of dying in the platforming sections is next to non existent thanks to some &lt;em&gt;very&lt;/em&gt; lenient platforming targets. When I did die it was generally because I hit the wrong key and made Lara go the wrong way not because a certain jump was too hard to make.&lt;/p&gt;

&lt;p&gt;The shooting sections tend to be duck and cover affairs. You&amp;rsquo;ll spend most of your time crouching behind a crate, popping out every now and then to shoot some enemies. Sometimes the shooting sections can feel a bit boring as you face wave after wave of enemy, especially later on in the game when the enemies start throwing grenades that force you to keep moving from cover to cover, often not giving you chance to actually return fire. At other points though the combat can be fun and exciting. The level where Lara obtains a grenade launcher is particularly memorable for me. The cover system in Tomb Raider works well enough. Lara automatically takes cover behind objects as you approach them assuming there are enemies nearby. I would have preferred a dedicated button to make her stick to cover but there&amp;rsquo;s nothing up with the cover system that has been implemented.&lt;/p&gt;

&lt;p&gt;Shooting sections are occasionally spiced up with the introduction of boss fights. These tend to be heavy gunners dressed in body armour or with shields. They put up a bit more of a fight than the regular enemies but you tend to face them one-on-one which sort of eliminates the threat of them since you can easily dodge their attacks and attack their weak points. Doing so then leads to a joyous quicktime event. Failing said event causes the enemy to get back up but in the time it takes for them to get back up, you can probably hit them in their weak spot again causing them to go back down. It&amp;rsquo;s a bit of a cheap tactic but hey, it works.&lt;/p&gt;

&lt;p&gt;The weapons in the game are OK. You get a bow &amp;amp; arrow which, if used correctly, is possibly the most powerful and certainly the most versatile weapon in the game. You also get a pistol, rifle &amp;amp; shotgun which get upgraded to more advanced models as you progress through the story. You&amp;rsquo;ll probably find yourself using your pistol the most often since ammo is so plentiful for it and it tends to kill enemies in one or two shots. Throughout the game there are weapon modifications to collect and also a sort of in game currency called salvage which allows you to purchase said modifications. The modifications improve the base stats of your weapons and a few add some cool new functions to them like firing incendiary rounds from your shotgun.&lt;/p&gt;

&lt;p&gt;You also gain experience as you kill enemies in the game which allows you to buy perks. The experience rewarded is based on how badass the kill is. Body shots earn the least, followed by headshots and then executions. Executions can only be performed by purchasing the required perk though. Aside from adding executions, perks also make various improvements to Lara such as reducing fall damage or making her more efficient at looting enemies. The perks are all helpful but there isn&amp;rsquo;t much need to ration your experience points. You earn a significant quantity of experience every time you finish a story mission so you&amp;rsquo;ll never really run short and be unable to afford a perk.&lt;/p&gt;

&lt;p&gt;There are many collectibles to be found in this game too ranging from artefacts which have their own L.A. Noir like inspection mode to diary entries from other characters which help flesh out their backstory a little bit. It is actually sort of worth trying to find these collectibles since they add a bit to the story but the placement of them is often illogical. It would seem, for example, that characters that are kidnapped right in front of you and you chase after take the time to leave their diary entries as they are kidnapped.&lt;/p&gt;

&lt;p&gt;In addition to hidden items to find there are also hidden tombs to find. Known as Challenge Tombs, these sections are one of my favourite parts of the game aside from the story. Challenge Tombs lack enemies, offering some slightly more relaxing gameplay. Instead, they have one large central puzzle which you must solve in order to access a reward (generally a weapon modification). Some of the puzzles require a few minutes of thought but solving them is fairly satisfying, generally employing a bit of platforming, timing and interacting with the environment. The puzzles are made a bit easier by the use of Lara&amp;rsquo;s âSurvival Instinctsâ which highlight points of interest in the environment. While it&amp;rsquo;s helpful, âSurvival Instinctsâ sort of spoils the challenge of the Challenge Tombs. To get maximum enjoyment out of the challenge tombs, try and ration your usage of the âSurvival Instinctsâ.&lt;/p&gt;

&lt;p&gt;The graphical design of the game is truly fantastic. The game looks beautiful with the character models being very detailed and believable. Environments are rich and detailed with some great vistas at various points in the game. The graphics aren&amp;rsquo;t just eye candy though, they do a great job of adding to the atmosphere of the game and making the world as a whole more immersive. Another aspect of the game&amp;rsquo;s design which is fantastic is the sound. As I&amp;rsquo;ve already said, the voice acting in this game is terrific and that&amp;rsquo;s not just for the cutscenes. Enemies in the game have their own conversations which are fun to listen to before killing them. It&amp;rsquo;s really cool to hear how enemies go from questioning how some girl can be running circles around them to genuinely fearing her. Then, when things start to go their way again, they fear her less.&lt;/p&gt;

&lt;p&gt;Not only is the voice acting great but the ambient sound is brilliant too. The sound of Lara climbing up a craggy cliff face is incredibly satisfying as is the sound an arrow makes as it lodges itself in an enemy&amp;rsquo;s skull. All the individual grunts and breaths Lara takes sound brilliant and add to the immersion of the game.&lt;/p&gt;

&lt;p&gt;As far as reboots go, Tomb Raider is a shining example of how to do one properly. Thanks to some TLC by the developers, Tomb Raider is a fantastic game with an engaging and worthwhile story mixed in with some beautiful set pieces. Yes the gameplay isn&amp;rsquo;t the most original or exciting thing out there but it&amp;rsquo;s easy to forget when the story is this good. I only wish that the developers had laid off the quicktime events and button mashing because it really did make some sections of the game tedious to play. Still, even though these sequences exist throughout the game, they make up a relatively small amount of the actual game and won&amp;rsquo;t detriment from your overall enjoyment of the game. Definitely play this game.&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;A Side Note - The Multiplayer&lt;/h2&gt;

&lt;p&gt;It&amp;rsquo;s obvious that Tomb Raider is a game focused on a solo experience but, for better or for worse, the publisher decided that a multiplayer component was also necessary. The multiplayer section of the game was developed by a separate studio and, while it isn&amp;rsquo;t terrible, it&amp;rsquo;s easily forgettable. The multiplayer includes a standard PvP deathmatch mode as well as a scavenger mode where one team must collect supplies while the other tries to stop them and an escort style mode where one team must transport supplies to a specific point on the map.&lt;/p&gt;

&lt;p&gt;The multiplayer might occupy you for two or three hours at best but seriously, go into this game expecting a great single player experience, not a multiplayer one.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SymSteam Beta 2.1 Released</title>
      <link>http://localhost:1313/post/2013/03/2013-03-31-symsteam-beta-2-1</link>
      <pubDate>Sun, 31 Mar 2013 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/post/2013/03/2013-03-31-symsteam-beta-2-1</guid>
      <description>&lt;p&gt;This is a &lt;em&gt;very&lt;/em&gt; small update for SymSteam that fixes two bugs you probably didn&amp;rsquo;t even know existed. The first, a simple spelling mistake in an error message. The second, a cock-up with pointers that meant that if an error occurred while deleting an old symbolic link an empty error message would be displayed. Not particularly helpful.&lt;/p&gt;

&lt;p&gt;Code wise, SymSteam should be easier to translate into other languages because I&amp;rsquo;ve changed all the user interface strings so that they&amp;rsquo;re created using &lt;code&gt;NSLocalizedString()&lt;/code&gt; and are stored in a strings file. If anyone wants to go ahead and translate SymSteam into another language please do.&lt;/p&gt;

&lt;p&gt;You should be prompted to install the update if you already have SymSteam installed. If not, you can view the changelog and download it from SymSteam&amp;rsquo;s &lt;a href=&#34;/projects/symsteam/&#34;&gt;project page&lt;/a&gt;. As always, you can find the source code for SymSteam on &lt;a href=&#34;https://github.com/alexjohnj/symsteam/&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>S3 Deployment Script Mk 2</title>
      <link>http://localhost:1313/post/2013/02/2013-02-17-s3-deployment-script-mk-2</link>
      <pubDate>Sun, 17 Feb 2013 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/post/2013/02/2013-02-17-s3-deployment-script-mk-2</guid>
      <description>&lt;p&gt;Since releasing the first version of the script I use to deploy this blog to S3, I&amp;rsquo;ve iterated on the script a little bit and made a few changes. Most of the changes in version 2 of the script are syntax changes to the script itself that make it a little bit easier to read[^1] however there are a couple of functionality changes.&lt;/p&gt;

&lt;p&gt;The biggest change is the introduction of command line flags. Three flags have been added, &lt;code&gt;-b&lt;/code&gt;, &lt;code&gt;-s&lt;/code&gt; and &lt;code&gt;-n&lt;/code&gt;. These tell the script to not minify sass files, not compile sass files and to perform a dry run respectively. The first two flags speak for themselves while the third, the dry run flag, simply means that the site will be generated as usual but it won&amp;rsquo;t be deployed to S3. It&amp;rsquo;s akin to running &lt;code&gt;s3cmd sync --dry-run src/ s3://bucket&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Another new âfeatureâ is a countdown that is performed before deploying to S3. After generating the site, the script waits three second before pushing the generated site giving you opportunity to cancel the deployment if you forgot to pass the &lt;code&gt;-n&lt;/code&gt; flag or realise that you&amp;rsquo;re (somehow) deploying to the wrong bucket. I&amp;rsquo;m sure some people aren&amp;rsquo;t going to like this but seriously, what&amp;rsquo;s waiting 3 seconds compared to the time it&amp;rsquo;d take to fix the mess after deploying your testing site to the wrong bucket?&lt;/p&gt;

&lt;p&gt;A couple of the smaller changes to the script relate to Python 3 compatibility. I&amp;rsquo;ve removed the dependency on PyYaml since it isn&amp;rsquo;t compatible with Python 3 and it was a bit of an overkill to get just one line out of the &lt;code&gt;_config.yml&lt;/code&gt; file. In addition, I&amp;rsquo;ve fixed a crash that would occur when gzipping files and the script is run under Python 3.&lt;/p&gt;

&lt;p&gt;The updated script is below and you can also find the script as a &lt;a href=&#34;https://gist.github.com/alexjohnj/4559517&#34;&gt;gist on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;{% highlight python %}&lt;/p&gt;

&lt;p&gt;#! /usr/local/bin/python3&lt;/p&gt;

&lt;p&gt;import gzip
import os
from subprocess import PIPE, check_call, CalledProcessError
from sys import exit
from time import sleep
import argparse&lt;/p&gt;

&lt;p&gt;def get_s3_bucket_name():
    with open(&amp;rdquo;_config.yml&amp;rdquo;) as f:
        for line in f:
            if line.split(&amp;rsquo;:&amp;lsquo;)[0] == &amp;ldquo;s3bucket&amp;rdquo;:
                return line.strip(&amp;ldquo;s3bucket:&amp;ldquo;).strip()
        exit(&amp;ldquo;Error: No bucket was found in the site&amp;rsquo;s _config.yml file&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;def compile_sass(input_file, output_file, minify=True):
    command = &amp;ldquo;sass &amp;rdquo; + path_to_sass_file + &amp;ldquo;:&amp;rdquo; + sass_compile_path
    if minify:
        command = command + &amp;ldquo; &amp;ndash;style compressed&amp;rdquo;
    try:
        check_call(command, shell=True)
    except CalledProcessError:
        print(&amp;ldquo;Something went wrong compiling sass files.&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;def generate_site():
    try:
        check_call([&amp;ldquo;jekyll&amp;rdquo;, &amp;ldquo;&amp;ndash;no-auto&amp;rdquo;], stdout=PIPE)
    except CalledProcessError:
        exit(&amp;ldquo;Something went wrong generating the site with Jekyll.&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;def gzip_files():
    for root, dirs, files in os.walk(&amp;rdquo;_site/&amp;ldquo;): # Traverse the _site/ directory
        for f in files:
            if os.path.splitext(f)[1] in [&amp;lsquo;.html&amp;rsquo;, &amp;lsquo;.css&amp;rsquo;, &amp;lsquo;.js&amp;rsquo;]:
                current_path = os.path.join(root, f)
                with open(current_path, &amp;lsquo;rb&amp;rsquo;) as f_in:
                    with gzip.open(current_path + &amp;lsquo;.gz&amp;rsquo;, &amp;lsquo;wb&amp;rsquo;) as f_out:
                        f_out.writelines(f_in)
                os.replace(current_path + &amp;lsquo;.gz&amp;rsquo;, current_path)&lt;/p&gt;

&lt;p&gt;def deploy_to_s3_bucket(bucket, dry_run=False):
    if dry_run:
        print(&amp;ldquo;Doing a dry run!&amp;rdquo;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;try: # Upload all uncompressed files
    command = &amp;quot;s3cmd sync -P --exclude &#39;*.html&#39; --exclude &#39;*.js&#39; --exclude &#39;*.css&#39; _site/ &amp;quot; + bucket
    if dry_run:
        command_ls = command.split()
        command_ls.insert(-2, &amp;quot;--dry-run&amp;quot;)
        command = &#39; &#39;.join(command_ls)

    check_call(command, shell=True, stdout=PIPE)
except CalledProcessError:
    exit(&amp;quot;Something went wrong deploying the site to s3.&amp;quot;)

try: # Upload all compressed files and add an appropriate header
    command = &amp;quot;s3cmd sync -P --add-header=&#39;Content-Encoding: gzip&#39; --exclude &#39;*.*&#39; --include &#39;*.html&#39; --include &#39;*.js&#39; --include &#39;*.css&#39; _site/ &amp;quot; + bucket
    if dry_run:
        command_ls = command.split()
        command_ls.insert(-2, &amp;quot;--dry-run&amp;quot;)
        command = &#39; &#39;.join(command_ls)

    check_call(command, shell=True, stdout=PIPE)
except CalledProcessError:
    exit(&amp;quot;Something went wrong setting the content encoding on the files deployed to s3&amp;quot;)

try: # Remove any files that have been deleted
    command = &amp;quot;s3cmd sync -P --delete-removed _site/ &amp;quot; + bucket
    if dry_run:
        command_ls = command.split()
        command_ls.insert(-2, &amp;quot;--dry-run&amp;quot;)
        command = &#39; &#39;.join(command_ls)
    check_call(command, shell=True, stdout=PIPE)
except CalledProcessError:
    exit(&amp;quot;Something went wrong removing files from the bucket&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == &amp;ldquo;&lt;strong&gt;main&lt;/strong&gt;&amp;ldquo;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;parser = argparse.ArgumentParser(description=&amp;quot;Deploy a Jekyll site to Amazon S3&amp;quot;)
parser.add_argument(&#39;-s&#39;, &#39;--no-sass&#39;, help=&amp;quot;Don&#39;t compile Sass files&amp;quot;, action=&#39;store_true&#39;)
parser.add_argument(&#39;-b&#39;, &#39;--beautiful-sass&#39;, help=&amp;quot;Don&#39;t minify Sass files&amp;quot;, action=&#39;store_false&#39;)
parser.add_argument(&#39;-n&#39;, &#39;--dry-run&#39;, help=&amp;quot;Perform a dry run when deploying to S3 (akin to running s3cmd with the --dry-run flag)&amp;quot;, action=&#39;store_true&#39;)
args = parser.parse_args()

path_to_sass_file = &amp;quot;assets/styles/sass/styles.scss&amp;quot; # Change to your path
sass_compile_path = &amp;quot;assets/styles/css/styles.css&amp;quot; # Change to your path

if args.no_sass == False:
    print(&amp;quot;Compiling Sass Files...&amp;quot;)
    compile_sass(path_to_sass_file, sass_compile_path, minify=args.beautiful_sass)

print(&amp;quot;Running Jekyll...&amp;quot;)
generate_site()

print(&amp;quot;Gzipping File...&amp;quot;)
gzip_files()

print(&amp;quot;Getting Bucket Name...&amp;quot;)
bucket_name = get_s3_bucket_name()

for i in reversed(range(1,4)):
    print(&amp;quot;\rDeploying to {0} in {1}&amp;quot;.format(bucket_name, i), end=&#39;&#39;)
    sleep(1)

print(&amp;quot;\nDeploying...&amp;quot;)
deploy_to_s3_bucket(bucket_name, dry_run=args.dry_run)
print(&amp;quot;Successfully Deployed Site!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;{% endhighlight %}&lt;/p&gt;

&lt;p&gt;[^1]: At the same time, I&amp;rsquo;ve removed half of the comments in the script because most of them were &lt;code&gt;#increment i by one&lt;/code&gt; style comments.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Deploying This Jekyll Site to S3</title>
      <link>http://localhost:1313/post/2013/01/2013-01-17-deploying-this-jekyll-site-to-s3</link>
      <pubDate>Thu, 17 Jan 2013 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/post/2013/01/2013-01-17-deploying-this-jekyll-site-to-s3</guid>
      <description>&lt;p&gt;If youâre the type of person who likes to read the footers of websites (who doesnât?) youâll have seen that this website is &amp;ldquo;poweredâ by Jekyll. In case you havenât heard, Jekyll is a static site generator that is especially useful for generating static blogs. That is, you run the Jekyll program on a computer, point it at a âsourceâ directory for your website and let it generate a load of HTML files that you can upload to practically any web server that serves files. Thereâs no need to install PHP or Rails and no need to get a fancy server that can run them. Jekyll is a really awesome utility and that is a terrible description of what it does. Youâre better off checking out the &lt;a href=&#34;https://github.com/mojombo/jekyll&#34;&gt;GitHub page&lt;/a&gt; and seeing how that describes Jekyll.&lt;/p&gt;

&lt;p&gt;The purpose of this post isnât to describe what Jekyll is though, itâs to tell you how I deploy this blog that is built with Jekyll to Amazon S3. As a lot of people have written, Amazon S3 is a great place to host small Jekyll blogs. Itâs cheap, itâs fast and it has an exceptionally good uptime.&lt;/p&gt;

&lt;p&gt;Deploying a Jekyll blog to Amazon S3 is relatively straightforward by using a tool called &lt;a href=&#34;http://s3tools.org/s3cmd&#34;&gt;s3cmd&lt;/a&gt;. s3cmd is a powerful tool that provides a good, command line method for synchronising a directory with a bucket on Amazon S3. While running s3cmd on your generated site will produce a website thatâs hosted on S3 (once youâve set up permissions, DNS etc.) thereâs a few things that can be done to optimise your website and make it a bit faster.&lt;/p&gt;

&lt;p&gt;You can run gzip to compress all your CSS, HTML &amp;amp; JavaScript files but in order to serve these files, youâll need to specify the correct content encoding on the compressed files otherwise browsers wonât render your pages. You can also run CSS &amp;amp; JavaScript minification, heck, you can even run HTML minification if youâre desperate to squeeze some speed out of your site. The problem is, running all of these processes requires you to remember a lot of different and complicated commands. Even if you have the memory of a &lt;a href=&#34;http://newscientist.com/article/dn2960-sea-lion-scores-top-for-memory.html&#34;&gt;sea lion&lt;/a&gt;, running all these commands makes deploying your site slow and tedious. Iâve gone ahead and written a script that combines all the commands I need for deploying my website and I thought I would share it with the world.&lt;/p&gt;

&lt;p&gt;The script is written in Python because I donât know any other scripting languages that well. I donât know Python that well too but itâs the scripting language Iâm most confident in. The script does a couple of things. The first thing it does is compile any sass files that need to be compiled and minifies the resulting CSS file. This is (possibly) quite specific to my website since not all Jekyll sites are going to use sass (though I do recommend it) and not all sites are going to compile just one sass file[^1]. After compiling the sass files, the &lt;code&gt;jekyll&lt;/code&gt; command is run, building the site. Iâve added a plugin to Jekyll to minify HTML[^2] so that gets done when the site is generated rather than by using another package. Once the site is generated, I run the &lt;code&gt;gzip&lt;/code&gt; command to compress all HTML, CSS &amp;amp; JavaScript files. Finally, the generated website is uploaded to an Amazon S3 bucket with the gzipped files having the appropriate content header set so that they will be loaded by browsers.&lt;/p&gt;

&lt;p&gt;The script basically wraps up five or six commands into one simple &lt;code&gt;python _deploy.py&lt;/code&gt; command. Any way, enough waffle. The script:&lt;/p&gt;

&lt;p&gt;{% highlight python %}
#! /usr/local/bin/python3&lt;/p&gt;

&lt;p&gt;import yaml
import gzip
import os
from subprocess import PIPE, check_call, CalledProcessError
from sys import exit&lt;/p&gt;

&lt;p&gt;def get_s3_bucket_name():
    try:
        with open(&amp;rdquo;_config.yml&amp;rdquo;) as f:
            config_file = yaml.load(f)
            try:
                return config_file[&amp;ldquo;s3bucket&amp;rdquo;]
            except KeyError:
                exit(&amp;ldquo;Error, no S3 bucket was found in _config.yml.&amp;ldquo;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;except IOError as e:
    exit(&amp;quot;I/O error({0}): {1}&amp;quot;.format(e.errno, e.strerror))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;def compile_sass(input_file, output_file, minify=True):
    command = &amp;ldquo;sass &amp;rdquo; + path_to_sass_file + &amp;ldquo;:&amp;rdquo; + sass_compile_path
    if minify:
        command = command + &amp;ldquo; &amp;ndash;style compressed&amp;rdquo;
    try:
        check_call(command, shell=True)
    except CalledProcessError:
        print(&amp;ldquo;Something went wrong compiling sass files.&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;def generate_site():
    try:
        check_call([&amp;ldquo;jekyll&amp;rdquo;, &amp;ldquo;&amp;ndash;no-auto&amp;rdquo;], stdout=PIPE)
    except CalledProcessError:
        exit(&amp;ldquo;Something went wrong generating the site with Jekyll.&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;def gzip_files():
    for root, dirs, files in os.walk(&amp;rdquo;_site/&amp;ldquo;): # Traverse the _site/ directory
        for f in files:
            filename, extension = os.path.splitext(f) # Get the extension of the current file
            if extension == &amp;ldquo;.html&amp;rdquo; or extension == &amp;ldquo;.css&amp;rdquo; or extension == &amp;ldquo;.js&amp;rdquo;: # Check to see if it&amp;rsquo;s a compressible extension
                with open(os.path.join(root, f), &amp;lsquo;r&amp;rsquo;) as f_to_compress: # Open the file
                    with gzip.open(os.path.join(root, f) + &amp;ldquo;.gz&amp;rdquo;, &amp;lsquo;wb&amp;rsquo;) as f_compressed: # Open a new gzip file
                        f_compressed.writelines(f_to_compress) # Write the original file into the gzip file
                os.remove(os.path.join(root, f)) # Remove the original file.
                os.rename(os.path.join(root, f) + &amp;ldquo;.gz&amp;rdquo;, os.path.join(root, f)) # Rename file to original&lt;/p&gt;

&lt;p&gt;def deploy_to_s3(bucket, dry=False):
    if dry:
        print(&amp;ldquo;DOING DRY RUN&amp;rdquo;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;try: # Upload all uncompressed files
    command = &amp;quot;&amp;quot;
    if not dry:
        command = &amp;quot;s3cmd sync -P --exclude &#39;*.html&#39; --exclude &#39;*.js&#39; --exclude &#39;*.css&#39; _site/ &amp;quot; + bucket
    else:
       command = &amp;quot;s3cmd sync -P --exclude &#39;*.html&#39; --exclude &#39;*.js&#39; --exclude &#39;*.css&#39; _site/ --dry-run &amp;quot; + bucket 
    check_call(command, shell=True, stdout=PIPE)
except CalledProcessError:
    exit(&amp;quot;Something went wrong deploying the site to s3.&amp;quot;)

try: # Upload all compressed files and add an appropriate header
    command = &amp;quot;&amp;quot;
    if not dry:
        command = &amp;quot;s3cmd sync -P --add-header=&#39;Content-Encoding: gzip&#39; --exclude &#39;*.*&#39; --include &#39;*.html&#39; --include &#39;*.js&#39; --include &#39;*.css&#39; _site/ &amp;quot; + bucket
    else:
        command = &amp;quot;s3cmd sync -P --add-header=&#39;Content-Encoding: gzip&#39; --exclude &#39;*.*&#39; --include &#39;*.html&#39; --include &#39;*.js&#39; --include &#39;*.css&#39; --dry-run _site/ &amp;quot; + bucket
    check_call(command, shell=True, stdout=PIPE)
except CalledProcessError:
    exit(&amp;quot;Something went wrong setting the content encoding on the files deployed to s3&amp;quot;)

try:
    command = &amp;quot;&amp;quot;
    if not dry:
        command = &amp;quot;s3cmd sync -P --delete-removed _site/ &amp;quot; + bucket
    else:
        command = &amp;quot;s3cmd sync -P --delete-removed --dry-run _site/ &amp;quot; + bucket
    check_call(command, shell=True, stdout=PIPE)
except CalledProcessError:
    exit(&amp;quot;Something went wrong removing files from the bucket&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == &amp;ldquo;&lt;strong&gt;main&lt;/strong&gt;&amp;ldquo;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;path_to_sass_file = &amp;quot;assets/styles/sass/styles.scss&amp;quot;
sass_compile_path = &amp;quot;assets/styles/css/styles.css&amp;quot;

print(&amp;quot;Compiling Sass Files...&amp;quot;)
compile_sass(path_to_sass_file, sass_compile_path, minify=True)

print(&amp;quot;Running Jekyll...&amp;quot;)
generate_site()

print(&amp;quot;Gzipping File...&amp;quot;)
gzip_files()

print(&amp;quot;Getting Bucket Name...&amp;quot;)
bucket_name = get_s3_bucket_name()

print(&amp;quot;Deploying to %s...&amp;quot; % bucket_name)
deploy_to_s3(bucket_name, dry=False)
print(&amp;quot;Successfully Deployed Site!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;{% endhighlight %}&lt;/p&gt;

&lt;p&gt;Thereâs a few prerequisites for the script. Youâll need to install the &lt;a href=&#34;http://pyyaml.org/wiki/PyYAML&#34;&gt;PyYaml&lt;/a&gt; library for Python, as well as the &lt;a href=&#34;http://sass-lang.com&#34;&gt;sass&lt;/a&gt; &amp;amp; &lt;a href=&#34;http://s3tools.org/s3cmd&#34;&gt;s3cmd&lt;/a&gt; packages. Youâll also need to modify your websiteâs &lt;code&gt;_config.yml&lt;/code&gt; file so that it has the name of the s3 bucket you want s3cmd to upload your website to:&lt;/p&gt;

&lt;p&gt;{% highlight yaml %}
s3bucket:    s3://bucketname
{% endhighlight %}&lt;/p&gt;

&lt;p&gt;If you donât need to compile any sass files, go ahead and comment out[^3] the 6th line of the &lt;code&gt;__main__&lt;/code&gt; method (thatâs where it says &lt;code&gt;compile_sass(path_to_sass_file, sass_compile_path, minify=True)&lt;/code&gt;). If you do need to compile sass files, modify the &lt;code&gt;path_to_sass_file&lt;/code&gt; and &lt;code&gt;sass_compile_path&lt;/code&gt; variables so that they point to where the main sass file is and where you want it to be compiled to.&lt;/p&gt;

&lt;p&gt;And thatâs it. Itâs not the most general script in the world but I can see it coming in handy for one or two people who have similar deployment processes to me. If you want to leave some feedback on the script, Iâve created a &lt;a href=&#34;https://gist.github.com/4559517&#34;&gt;Gist on GitHub&lt;/a&gt; for the script with some more extensive documentation.&lt;/p&gt;

&lt;p&gt;[^1]: By one sass file I donât mean Iâve got all of my sass in one file, I just compile lots of different sass files into one CSS file.&lt;/p&gt;

&lt;p&gt;[^2]: I know HTML minification isnât the safest or best way to boost a siteâs performance, you donât need to tell me.&lt;/p&gt;

&lt;p&gt;[^3]: To comment a line out in Python just add a &lt;code&gt;#&lt;/code&gt; to the start of the line.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SymSteam Beta 2 Released</title>
      <link>http://localhost:1313/post/2012/12/2012-12-31-symsteam-beta-2-released</link>
      <pubDate>Mon, 31 Dec 2012 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/post/2012/12/2012-12-31-symsteam-beta-2-released</guid>
      <description>&lt;p&gt;It may have taken nearly 9 months but beta 2 of SymSteam is finally available for download. This is a &lt;em&gt;huge&lt;/em&gt; update for SymSteam that completely changes how it works and fixes many bugs as a result. SymSteam no longer manages drives based on their names, rather, it relies on the UUID of a drive to determine if the drive is the Steam drive. This makes SymSteam more reliable in situations where you have drives with the same name but it does introduce a new requirement. The drive you&amp;rsquo;re storing your games on must have a UUID which essentially means that the drive must be HFS+ formatted[^1].&lt;/p&gt;

&lt;p&gt;In addition to this major change, lots of small changes have also been made that make SymSteam easier to use and more reliable. The error correction performed on your Steam folders when SymSteam is launched is far more reliable now and SymSteam can fix incorrect folder setups in many more cases, reducing the number of situations where SymSteam will fail to work. The setup process has been rewritten to make it much simpler to use and also to make it less likely to fail. The preferences window has been expanded upon too, providing more in-depth options for notifications and an option to start SymSteam on login. Oh, SymSteam finally has an icon too! It&amp;rsquo;s not amazing but it&amp;rsquo;s better than the generic app icon that SymSteam had before the update.&lt;/p&gt;

&lt;p&gt;The full changelog for beta 2 can be found &lt;a href=&#34;http://alexjohnj.github.com/symsteam/changelog.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;SymSteam now has some fairly extensive documentation available on its new &lt;a href=&#34;http://www.alexj.me/projects/symsteam/&#34;&gt;project page&lt;/a&gt;. The new documentation includes information on setting up SymSteam and some troubleshooting information too. The documentation can be accessed &lt;a href=&#34;http://www.alexj.me/projects/symsteam/documentation/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you already have SymSteam installed then it will prompt you to update (assuming you&amp;rsquo;ve allowed it to). If not, you can download beta 2 of SymSteam &lt;a href=&#34;http://www.alexj.me/projects/symsteam/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;[^1]: There are other filesystems that assign drives a UUID but I don&amp;rsquo;t think any of these have native support in OS X.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fixing Slow Wireless Speeds in Ubuntu 12.10</title>
      <link>http://localhost:1313/post/2012/12/2012-12-31-fixing-slow-wiereless-speeds-in-ubuntu</link>
      <pubDate>Mon, 31 Dec 2012 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/post/2012/12/2012-12-31-fixing-slow-wiereless-speeds-in-ubuntu</guid>
      <description>

&lt;p&gt;After building a new computer recently I went ahead and installed Ubuntu 12.10 on it alongside Windows. Since the computer doesn&amp;rsquo;t have a wireless card and isn&amp;rsquo;t anywhere near a router, I bought a cheap Wireless USB adapter so that I could connect to my wireless network. I actually bought the adapter several years ago and used it on a computer running Ubuntu 10.04 that was in a similar situation. The adapter I bought was a &lt;a href=&#34;http://www.amazon.co.uk/gp/product/B001HO3ZTQ/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1634&amp;amp;creative=19450&amp;amp;creativeASIN=B001HO3ZTQ&amp;amp;linkCode=as2&amp;amp;tag=simpl06-21&#34;&gt;Belkin F5D8053&lt;/a&gt;, the v6 revision. I bought this adapter because I&amp;rsquo;d been told that it had good compatibility with Linux and I remember it working perfectly well in Ubuntu 10.04. I was surprised to find then that when I used the adapter with my new installation of Ubuntu 12.10 it was very unreliable. The adapter worked but after arround five minutes of usage, the connection speed would drop substantially and anything, be it on the internet or my local network, was incredibly slow.&lt;/p&gt;

&lt;p&gt;I set about trying to figure out what was up. The first thing I thought was that maybe the driver used for the adapter had been messed up somehow between Ubuntu 10.04 and 12.10. Running &lt;code&gt;lsusb&lt;/code&gt; revealed that the adapter used a RTL8191SU chipset by Realtek so I went to Realtek&amp;rsquo;s website and downloaded the source to compile the driver for the adapter. Turns out, something changed in version 3.4 of the Linux Kernel that made compiling these drivers impossible without some minor modifications. Version 3.5 of the Kernel broke even those modifications so compiling new drivers wasn&amp;rsquo;t an option any more.&lt;/p&gt;

&lt;p&gt;Some more Googling produced some interesting information. Apparently, there&amp;rsquo;s a &lt;a href=&#34;https://bugs.launchpad.net/ubuntu/+source/linux/+bug/621265&#34;&gt;bug&lt;/a&gt; in network-manager, the package used by Ubuntu to connect to networks, that results in the connection speed slowing down after a few minutes of use. The solution, install an alternate to network-manager and disable network-manager. I went ahead and installed &lt;a href=&#34;https://launchpad.net/wicd&#34;&gt;wicd&lt;/a&gt; and disabled network-manager and so far, in the past 36 hours of use (around 12 hours continuous use over 3 days), I&amp;rsquo;ve had no drop in connection speed. It would seem that the drop in connection speed is due to network-manager which means that people having similar problems with connection speed could find that replacing network-manager will solve their problems.&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;The Fix&lt;/h2&gt;

&lt;p&gt;The fix is quite simple, install wicd and disable network-manager. The steps for doing this are outlined below:&lt;/p&gt;

&lt;p&gt;First, install the wicd package:&lt;/p&gt;

&lt;p&gt;{% highlight bash %}
sudo apt-get intall wicd
{% endhighlight %}&lt;/p&gt;

&lt;p&gt;Next, disable network-manager and stop it from starting on startup too:&lt;/p&gt;

&lt;p&gt;{% highlight bash %}
sudo stop network-manager
sudo mv /etc/init/network-manager.conf /etc/init/network-manager.conf.off
{% endhighlight %}&lt;/p&gt;

&lt;p&gt;Now start the wicd daemon and bring up the GUI tool so you can connect to your wireless network:&lt;/p&gt;

&lt;p&gt;{% highlight bash %}
sudo /etc/init.d/wicd start
wicd-client
{% endhighlight %}&lt;/p&gt;

&lt;p&gt;And that&amp;rsquo;s it, assuming that network-manager was your problem, you should now have a far more stable wireless connection and wicd should start on login too. If you want to get wicd in Unity&amp;rsquo;s system tray, you&amp;rsquo;ll need to run the following command:&lt;/p&gt;

&lt;p&gt;{% highlight bash %}
gsettings set com.canonical.Unity.Panel systray-whitelist &amp;ldquo;[&amp;lsquo;wicd&amp;rsquo;]&amp;rdquo;
{% endhighlight %}&lt;/p&gt;

&lt;p&gt;Then logout and log back in, you should now have a (fairly ugly) tray icon for wicd. There&amp;rsquo;s replacement icons available, just Google for them.&lt;/p&gt;

&lt;p&gt;Once you&amp;rsquo;re certain that wicd has solved your problem and you don&amp;rsquo;t need network-manager anymore, you can go ahead and remove nework-manager. First, revert the changes made to network-manager&amp;rsquo;s upstart job and then remove the package:&lt;/p&gt;

&lt;p&gt;{% highlight bash %}
sudo mv /etc/init/network-manager.conf.off /etc/init/network-manager.conf
sudo apt-get remove &amp;ndash;purge network-manager
{% endhighlight %}&lt;/p&gt;

&lt;p&gt;That solved the problem for me. If it does for you, be sure to file a bug report so that this issue hopefully gets fixed in network-manager.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Recent Projects</title>
      <link>http://localhost:1313/post/2012/06/2012-06-13-recent-projects</link>
      <pubDate>Wed, 13 Jun 2012 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/post/2012/06/2012-06-13-recent-projects</guid>
      <description>

&lt;p&gt;It would seem that pretty much the only thing I use this blog for is announcements. Guess what&amp;rsquo;s in this post, some more announcements, specifically regarding some new projects that I&amp;rsquo;ve started in the past month (and a bit).&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Now that I&amp;rsquo;ve got a lot more free time on my hands, I&amp;rsquo;ve managed to start two new Cocoa projects for the Mac, one of which I&amp;rsquo;ve been intending to do for several months. They&amp;rsquo;re both free applications and they&amp;rsquo;re both open source, with the source code being available off of my &lt;a href=&#34;https://github.com/alexjohnj&#34;&gt;GitHub&lt;/a&gt; page. If you were to categorise both of these projects, they&amp;rsquo;d both fall into two categories that are totally new to me in terms of development. One of the projects is a game and another is an utility aimed at developers.&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;MemTester ( - Mac)&lt;/h2&gt;

&lt;p&gt;MemTester is the game. I&amp;rsquo;ve never made a game before so this was/is quite a fun little project to work on. MemTester is a very simple memory testing game (surprise, surprise) that tests your ability to memorise an increasingly lengthy sequence of numbers, letters or symbols. The game has three difficulties, easy (just numbers), medium (just lowercase letters) &amp;amp; hard (nearly all possible ASCII characters) and has amazing features like a high scores table &amp;amp; fancy animations (/sarcasm). I started working on MemTester as a port of a similar game that a friend of mine made. &lt;a href=&#34;http://code.google.com/p/mem-tester&#34;&gt;My friend&amp;rsquo;s version&lt;/a&gt; was written in Java and was very un-Mac like so I decided to make a native Cocoa port of the game for fun. He wasn&amp;rsquo;t best pleased.&lt;/p&gt;

&lt;p&gt;So far, version 1.0 of MemTester has been released and there&amp;rsquo;s been no further development since then (though I do have a couple of things planned). Development for MemTester will be on and off, but you can watch &lt;a href=&#34;https://github.com/alexjohnj/memtester-mac&#34;&gt;the project&lt;/a&gt; on GitHub. You can also download the latest version from &lt;a href=&#34;https://github.com/alexjohnj/memtester-mac/downloads&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;Appcastr&lt;/h2&gt;

&lt;p&gt;Appcastr is the development tool. It&amp;rsquo;s quite possibly my most ambitious project to date and so far, developing it has been a joy and I&amp;rsquo;ve learnt a lot of new things working on it. Appcastr is a tool for developers who use the Sparkle update system, that&amp;rsquo;s the update system used by 99% of Mac applications that aren&amp;rsquo;t in the Mac App Store, that makes it easier &amp;amp; quicker for developers to create and maintain appcast files by providing a GUI to edit them with. Appcast files are just RSS files with a special &lt;code&gt;&amp;lt;enclosure&amp;gt;&lt;/code&gt; element in them that allows them to include information on the latest version of an application and where to get it from. The appcast file is downloaded by the Sparkle update framework and then parsed to see if there&amp;rsquo;s a new version of the application available.&lt;/p&gt;

&lt;p&gt;Since appcast files are just XML files, it&amp;rsquo;s not exactly hard to edit the files by hand but it&amp;rsquo;s a lot faster to use a GUI application and I plan on adding a couple of handy features that will make distributing an update significantly faster if the developer chooses to use Appcastr.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m a bit concerned working on a project like Appcastr. Given that it&amp;rsquo;s aimed at developers, it&amp;rsquo;s much more likely that the source code will be viewed by, and possibly edited by, other developers than my other projects. This means the quality of my code is a lot more important and will probably receive some judgment. Make no mistake, I really want other developers to look at my code and tell me where to improve it. Given that I&amp;rsquo;ve taught myself to program, I&amp;rsquo;m certain that my code is rife with malpractice and things that&amp;rsquo;d probably make more experienced developers cry. I&amp;rsquo;d love to hear some constructive criticism about the quality of my code.&lt;/p&gt;

&lt;p&gt;Appcastr version 0.1 was released just yesterday and version 0.1.1 was released this morning. I&amp;rsquo;m going to work diligently on this project so expect frequent updates. You can get the bleeding edge version of Appcastr by visiting the &lt;a href=&#34;https://github.com/alexjohnj/appcastr&#34;&gt;project&amp;rsquo;s GitHub page&lt;/a&gt; and checking for the branch which is the most commits ahead (at the time of writing, version 0.2). Be warned though, things could be broken or buggy in that branch. The &amp;ldquo;master&amp;rdquo; branch will have more stable code and (should) be a representation of the most recent build available off of the project&amp;rsquo;s &lt;a href=&#34;https://github.com/alexjohnj/appcastr/downloads&#34;&gt;downloads page&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;So they&amp;rsquo;re the two new projects that I&amp;rsquo;ve launched recently. My third project, &lt;a href=&#34;https://github.com/alexjohnj/symsteam&#34;&gt;SymSteam&lt;/a&gt;, hasn&amp;rsquo;t received much love recently. It&amp;rsquo;s been stuck on beta 1 for a while. To be honest, I&amp;rsquo;ve been using the application day-in-day-out for several months now and haven&amp;rsquo;t noticed any bugs in my usage so I&amp;rsquo;m tempted to make an icon for the application and release it as version 1.0. Laziness FTW!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Thoughts on WWDC 2012</title>
      <link>http://localhost:1313/post/2012/06/2012-06-12-thoughts-on-wwdc</link>
      <pubDate>Tue, 12 Jun 2012 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/post/2012/06/2012-06-12-thoughts-on-wwdc</guid>
      <description>

&lt;p&gt;Yesterday (June 11th) marked the first day of Apple&amp;rsquo;s famous WWDC event. As per usual, Apple opened the event with the only part of the event that isn&amp;rsquo;t under NDA (and hence the only part that I&amp;rsquo;ve actually been able to see so far), the keynote. The keynote was a blast with lots of new, exciting things announced. Here&amp;rsquo;s my thoughts on a couple of those things that were announced.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;&lt;a href=&#34;http://www.apple.com/macbookair/&#34;&gt;Updated MacBook Airs&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;The updated MacBook Airs are really nice. They&amp;rsquo;re a lot faster now thanks to both a new generation of Ivy Bridge processors and faster SSD technology. I&amp;rsquo;d really like to get one but I&amp;rsquo;ve just splashed out on a last generation MacBook Air, so can&amp;rsquo;t afford the new generation any time soon. The graphical performance of the new Airs has been improved by âup to 60%â which really excites me. The Airs still have an integrated graphics card but it&amp;rsquo;s an Intel HD 4000 series card, which is a surprisingly beefy integrated card and performs respectably at many modern games. The price of the Airs has been dropped a bit too. Here in the UK, the prices have gone down enough that the low end 13 inch model costs the same as the previous generation low end 11 inch model. Nice.&lt;/p&gt;

&lt;p&gt;The MacBook Pros also got an update, just a small bump in specs, nothing too exciting. Apple seems to have deprecated the 17 inch MacBook Pro though which&amp;rsquo;ll annoy about ten people.&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;&lt;a href=&#34;http://www.apple.com/macbook-pro/&#34;&gt;MacBook Pro With Retina Display&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Wow. Just wow. This thing is awesome. This isn&amp;rsquo;t the 15 inch Air that everybody was hoping for but I think it&amp;rsquo;s better. The new MacBook Pro has a completely redesigned case which is stunning to look at. What&amp;rsquo;s even more stunning to look at though is that new display. It has over 5 million pixels in it. I haven&amp;rsquo;t seen one of these yet but I know from the numbers, that display is gorgeous. The new MacBook Pro has really excited me, it represents the start of a revamp of Apple&amp;rsquo;s line of computers. I envision new designs &amp;amp; retina displays coming to most of Apple&amp;rsquo;s computers throughout the next couple of years.&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;&lt;a href=&#34;http://www.apple.com/osx/&#34;&gt;OS X Mountain Lion&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Mountain Lion was probably my favourite piece of news from the WWDC keynote. True, most of what Apple talked about in the keynote had already been posted on their website but there was still some interesting new features that they announced. The new âPower Napâ feature is pretty neat, allowing you to download updates to your Mac while it&amp;rsquo;s in sleep mode. It&amp;rsquo;ll also keep all of your iCloud stuff in sync while your Mac sleeps which is handy. If Apple includes support for updating your (App Store) applications while in sleep mode too then that&amp;rsquo;d just be fantastic.&lt;/p&gt;

&lt;p&gt;The inclusion of speech-to-text processing in Lion too is pretty cool. If the processing is as good as iOS&amp;rsquo;s speech-to-text then I can see this feature actually being really useful for dictating long text documents. Apple says that the dictation works in any text field too, so no need to wait for developers to update their applications. The only saddening part was that there was no mention of a speech API, something which I would love to play around with.&lt;/p&gt;

&lt;p&gt;There were a couple of other tidbits in 10.8 that looked interesting. The new version of Safari seems pretty good and I&amp;rsquo;ll probably switch back to it from Chrome when it is released. GPU accelerated scrolling was also mentioned, which would make scrolling a lot smoother in OS X and would help make OS X &lt;em&gt;feel&lt;/em&gt; even faster. The fact that Apple seems to have âfixedâ full screen mode on external displays is fantastic too. Full screen mode might actually be useful in 10.8 now.&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;&lt;a href=&#34;http://www.apple.com/ios/ios6/&#34;&gt;iOS 6&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;iOS 6 was probably the most disappointing of all the announcements at WWDC this year. There were good aspects to the announcement but overall I felt unsatisfied with the new features that had been announced. Siri was updated with support for getting information on sports &amp;amp; movie, a feature which I doubt will be used much. She also got some new voice commands, a few of which will be useful. She finally gained support for obtaining local business information outside of the US, something which I&amp;rsquo;ve been waiting for since the iPhone 4S launched back in October. There&amp;rsquo;s still no API for Siri though which is really annoying. I like to control my music using Siri (saves getting the phone out of my pocket) but I don&amp;rsquo;t use the built in music app. It would be nice if I could use music voice commands in other apps like Rdio, something which would only be possible with an API.&lt;/p&gt;

&lt;p&gt;Unfortunately, there was no UI refresh in iOS 6 which was the main thing I was hoping for. Well, I say there was no UI refresh but really there was a mixture of UI updates which seems to have removed a lot of consistency in the iOS&amp;rsquo;s UI. Different shades of colours have been changed throughout the UI. The status bar, for example, is now a silvery blue instead of grey which is an interesting colour choice. There seems to be a slightly different shade of blue being used in navigation bars too. The new maps app has been given the silver UI treatment. It doesn&amp;rsquo;t look out of place in the OS but it certainly isn&amp;rsquo;t consistent with the rest of the OS&amp;rsquo;s UI. I don&amp;rsquo;t see why Apple would update parts of the UI in one application without updating the rest of the OS. It really doesn&amp;rsquo;t play nice with the consistency of the user interface throughout the operating system.&lt;/p&gt;

&lt;p&gt;As expected, Apple updated the maps app and they&amp;rsquo;re now using their own custom mapping service rather than Google Maps. The new maps (as in the actual maps) look a lot nicer and cleaner when compared to Google&amp;rsquo;s and Apple&amp;rsquo;s included some swanky 3D mode in the maps which looks pretty awesome. The new maps application also includes support for turn by turn directions which is pretty neat. I don&amp;rsquo;t have any use for it (yet) though.&lt;/p&gt;

&lt;p&gt;There were tons of other new features in iOS 6. The phone application (yeah, I&amp;rsquo;d forgotten about that too) got some nice updates which could come in handy for gracefully rejecting phone calls. There&amp;rsquo;s also a new Passbook application which looks like a virtual wallet for different types of tickets. I think it&amp;rsquo;ll be &lt;em&gt;really&lt;/em&gt; awesome but I doubt it&amp;rsquo;s going to get much use outside of the US for a long time which is a crying shame. Such an application could be really useful.&lt;/p&gt;

&lt;p&gt;The major disappointment with iOS 6 is its lack of backwards compatibility. Apple&amp;rsquo;s saying the update is compatible with the iPhone 3GS and onwards, the second &amp;amp; third generation iPad &amp;amp; the fourth generation iPod Touch. I don&amp;rsquo;t understand why the 3rd generation iPod Touch or 1st Generation iPad aren&amp;rsquo;t on the list though since they&amp;rsquo;re basically identical to the iPhone 3GS and iPhone 4 respectively in terms of processing power. Maybe I can understand the 1st Generation iPad not making the shortlist, it is quite slow to use with iOS 5 at the moment, but the 3rd generation iPod Touch, that represents a sizeable chunk of the iOS market and it&amp;rsquo;s pretty much the same as the 3GS. Strange.&lt;/p&gt;

&lt;p&gt;Overall, this year&amp;rsquo;s WWDC keynote has been very impressive. Lots of new products that are very exciting. I&amp;rsquo;m really looking forward to Mountain Lion (due in July) and I think it&amp;rsquo;s going to be a good all around update to OS X. iOS 6 will be pretty good too though, for me, it&amp;rsquo;s not as exciting as Mountain Lion. The thing I&amp;rsquo;m waiting for now is the release of the actual development sessions from WWDC, they&amp;rsquo;re probably the best part of the whole week for me.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SymSteam Beta 1 Released</title>
      <link>http://localhost:1313/post/2012/04/2012-04-11-symsteam-beta-1-released</link>
      <pubDate>Wed, 11 Apr 2012 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/post/2012/04/2012-04-11-symsteam-beta-1-released</guid>
      <description>&lt;p&gt;Good news! Just the other day, SymSteam, my small pet project, received a pretty major update.  In fact, this update is so major, I&amp;rsquo;ve labelled it Beta 1. Pretty much everything to do with SymSteam has changed.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Beta 1 brings numerous new features and changes to the application. A list of the changes is available on SymSteam&amp;rsquo;s new website &lt;a href=&#34;http://alexjohnj.github.com/symsteam/changelog.html&#34;&gt;here&lt;/a&gt; but in this post I&amp;rsquo;d just like to elaborate on some of the features and the work that&amp;rsquo;s gone into beta 1 of SymSteam.&lt;/p&gt;

&lt;p&gt;Development on SymSteam 0.2 began back in February with the simple aim of adding support for Growl notifications and fixing some bugs to make SymSteam more usable. Growl support was added pretty quickly but I had the idea of rewriting the underlying logic of SymSteam which helped to remove a substantial number of bugs. The rewrite took the best part of a day and made SymSteam far easier to use. It simplified the setup procedure and helped make SymSteam less likely to fail in difficult situations. After this rewrite, I rewrote the scanning system for detecting the SteamApps folder. I changed it so that SymSteam performed first a shallow scan (only scanning top level directories) and then it performed a deep scan, should it not find the SteamApps folder when performing the shallow scan. This change in the scanning mechanism helped to significantly reduce the time it took for SymSteam to detect the SteamApps folder when a drive was plugged in, in around 90% of cases.&lt;/p&gt;

&lt;p&gt;After making all these changes to the scanning system however, I decided to endulge on another rewrite, completely changing the way SymSteam functions. SymSteam no longer scans all drives that are connected for the SteamApps folder, rather it will resolve the symbolic link you point it to and only scan at that directory, performing a simple check to see if the folder exists at the symbolic link or not. If the correct drive is connected, the folder will exist and SymSteam can update the SteamApps folders so that Steam loads its games off of the external hard drive. If the folder doesn&amp;rsquo;t exist however, then life carries on as normal and nothing changes. This is &lt;em&gt;a lot&lt;/em&gt; faster than scanning each drive that is connected and SymSteam can now work in a split second rather than a few seconds.&lt;/p&gt;

&lt;p&gt;After this rewrite, I attempted to write a startup method that would run when SymSteam is launched that would attempt to fix any naming problems with the SteamApps folders that may arise when SymSteam is quit without being given the ability to rename the SteamApps folders so that the local folder is active. This error prevention method seems to work with limited success and I&amp;rsquo;ll continue to develop it in future versions to make it more successful.&lt;/p&gt;

&lt;p&gt;I decided to update the preferences window in SymSteam too, using the MASPreferences framework to provide a proper preferences window. I wrote about how to use MASPreferences and my experiences with it on SimpleCode &lt;a href=&#34;http://simplecode.me/2012/04/08/preferences-window-in-cocoa-maspreferences/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There were several other changes within SymSteam, however I feel that these were the most substantial. Other changes include a vastly simplified setup procedure (which I briefly touched upon when talking about the rewrite), a new tool to help ease the creation of symbolic links and a new autoupdate system too, which will make pushing updates much easier in the future.&lt;/p&gt;

&lt;p&gt;SymSteam beta 1 is available now and I&amp;rsquo;ve already got plans for the next version of SymSteam, beta 2. SymSteam now has its own website, so you can get access to SymSteam beta 1 and the source code via &lt;a href=&#34;http://alexjohnj.github.com/symsteam&#34;&gt;http://alexjohnj.github.com/symsteam&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SymSteam 0.1.5 Released</title>
      <link>http://localhost:1313/post/2012/02/2012-02-18-symsteam-0-1-5-released</link>
      <pubDate>Sat, 18 Feb 2012 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/post/2012/02/2012-02-18-symsteam-0-1-5-released</guid>
      <description>

&lt;p&gt;SymSteam, &lt;a href=&#34;/02/symsteam&#34;&gt;my small project I released just a few weeks ago&lt;/a&gt;, received its first major update today. Version 0.1.5 was pushed to the GitHub repo a few hours ago and with it came an important new feature and some bug fixes.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;The most important new feature is a new preferences window which allows you to change the where your symbolic and local SteamApps folders are located. This is pretty handy since, previously, the only way to change these paths was to delete SymSteam&amp;rsquo;s plist file. Under the hood, SymSteam&amp;rsquo;s got a new system for managing connected drives so that it knows what drives are connected and, of those connected drives, which one is actually a Steam drive. This should remove a couple of bugs related to having multiple connected drives. It could, however, introduce some new ones. Watch out. One more thing to note, scanning drives for SteamApps folders should be a little bit faster now. Not massively, but a little bit.&lt;/p&gt;

&lt;p&gt;To download the latest version of SymSteam, head over &lt;a href=&#34;https://github.com/alexjohnj/SymSteam/downloads&#34;&gt;here&lt;/a&gt;. If you&amp;rsquo;re interested in the source code, you can check out the code &lt;a href=&#34;https://github.com/alexjohnj/SymSteam&#34;&gt;here&lt;/a&gt;. The code in the &lt;code&gt;master&lt;/code&gt; branch should be reasonably in sync with the latest version of SymSteam available to download. Most major new features will get their own branch while they&amp;rsquo;re being developed.&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;0.2&lt;/h2&gt;

&lt;p&gt;I also started working on version 0.2 today. The plan for version 0.2 is to add support for &lt;a href=&#34;http://growl.info/&#34;&gt;Growl&lt;/a&gt; notifications, improve the error handling logic for missing folders and add the ability to specify a single drive and path to scan for a SteamApps folder, improving performance greatly. So far, basic support for Growl has been added but not tested.&lt;/p&gt;

&lt;p&gt;If you want to see and (hopefully) contribute towards the development of the latest build of SymSteam, you can look at the &lt;code&gt;symsteam-2.0&lt;/code&gt; branch &lt;a href=&#34;https://github.com/alexjohnj/SymSteam/tree/symsteam-2.0&#34;&gt;here&lt;/a&gt; (I know, that should be &lt;code&gt;symsteam-0.2.0&lt;/code&gt; but I wasn&amp;rsquo;t thinking when I named the branch). Be warned, stuff will likely be unstable and broken in that branch.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>